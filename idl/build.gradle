/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id 'uforwarder.java-library-conventions'
    id 'com.google.protobuf' version '0.8.19'
}

dependencies {
    implementation 'com.google.protobuf:protobuf-java'
    implementation 'io.grpc:grpc-stub'
    implementation 'io.grpc:grpc-protobuf'

    if (JavaVersion.current().isJava9Compatible()) {
        // Workaround for @javax.annotation.Generated
        // see: https://github.com/grpc/grpc-java/issues/3633
        implementation 'javax.annotation:javax.annotation-api:1.3.1'
    }

    // Extra proto source files besides the ones residing under
    // "src/main".
    protobuf files("lib/protos.tar.gz")
    //protobuf files("code.uber.internal/")

    testImplementation 'junit:junit:4.12'
    // Extra proto source files for test besides the ones residing under
    // "src/test".
    testProtobuf files("lib/protos-test.tar.gz")
}

protobuf {
    protoc {
        // The artifact spec for the Protobuf Compiler
        artifact = 'com.google.protobuf:protoc:3.18.0'
    }
    plugins {
        // Optional: an artifact spec for a protoc plugin, with "grpc" as
        // the identifier, which can be referred to in the "plugins"
        // container of the "generateProtoTasks" closure.
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.50.0'
        }
    }
    generateProtoTasks {
        ofSourceSet('main').configureEach {
            plugins {
                // Apply the "grpc" plugin whose spec is defined above, without
                // options.  Note the braces cannot be omitted, otherwise the
                // plugin will not be added. This is because of the implicit way
                // NamedDomainObjectContainer binds the methods.
                grpc { }
            }
        }
    }
}

sourceSets {
    main {
        java {
            srcDirs 'build/generated/source/proto/main/grpc'
            srcDirs 'build/generated/source/proto/main/java'
        }
    }
}

project.afterEvaluate {
    check.dependsOn -= jacocoTestCoverageVerification
}
