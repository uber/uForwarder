/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id 'uforwarder.java-application-conventions'
    id "org.springframework.boot" version '2.7.11'
}

dependencies {
    implementation 'com.101tec:zkclient'
    implementation 'com.github.stefanbirkner:system-rules'
    implementation 'com.google.guava:guava'
    implementation 'com.google.protobuf:protobuf-java'
    implementation 'com.google.protobuf:protobuf-java-util'
    implementation 'com.netflix.concurrency-limits:concurrency-limits-core'
    implementation 'com.uber.concurrency-loadbalancer:concurrency-loadbalancer-core'
    implementation 'com.uber.m3:tally-core'
    implementation 'com.uber.m3:tally-m3'
    implementation 'io.grpc:grpc-core'
    implementation 'io.grpc:grpc-netty-shaded'
    implementation 'io.grpc:grpc-services'
    implementation 'io.grpc:grpc-stub'
    implementation 'io.jaegertracing:jaeger-core'
    implementation 'io.micrometer:micrometer-core'
    implementation 'io.opentracing:opentracing-api'
    implementation 'javax.inject:javax.inject'
    implementation 'net.jodah:failsafe'
    implementation 'net.logstash.logback:logstash-logback-encoder'
    implementation 'org.apache.commons:commons-lang3'
    implementation 'org.apache.curator:curator-x-async'
    //TODO: remove kafka version overrides if CoordinatorAutoConfigurationTest doesn't hang
    implementation 'org.apache.kafka:kafka-clients:2.8.2'
    implementation 'org.apache.kafka:kafka_2.12:2.8.2'
    implementation 'org.apache.logging.log4j:log4j-core'
    implementation 'org.slf4j:slf4j-api'
    implementation 'org.springframework:spring-core'
    implementation 'org.springframework:spring-beans'
    implementation 'org.springframework:spring-context'
    implementation 'org.springframework.boot:spring-boot'
    implementation 'org.springframework.boot:spring-boot-configuration-processor'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-jetty'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation project(':instrumentation')
    implementation project(':uforwarder-core')
    implementation project(':idl')
    testImplementation project(':fievel-common')
    testImplementation 'junit:junit'
    testImplementation 'io.grpc:grpc-testing'
    testImplementation 'org.apache.curator:curator-test'
    testImplementation 'org.awaitility:awaitility'
    testImplementation 'org.mockito:mockito-core'
    testImplementation 'org.mockito:mockito-inline'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly "org.junit.vintage:junit-vintage-engine"
    integrationTestImplementation 'org.testcontainers:kafka'
    integrationTestImplementation 'org.testcontainers:testcontainers'
    integrationTestImplementation project(':uforwarder-client')
    integrationTestImplementation project
}

tasks.named("bootJar") {
    archiveBaseName = 'uforwarder-boot'
}

tasks.named("jar") {
    archiveClassifier = ''
}

tasks.register('testJar', Jar) {
    dependsOn classes
    archiveBaseName = 'uforwarder-test'
    from sourceSets.integrationTest.output
}

configurations {
    testArtifacts
}

artifacts {
    testArtifacts testJar
}

publishing {
    publications {
        mavenTestJava(MavenPublication) {
            artifactId 'uforwarder-test'
            artifact testJar
        }
        mavenBootJava(MavenPublication) {
            artifactId 'uforwarder-boot'
            artifact bootJar
        }
    }
}
